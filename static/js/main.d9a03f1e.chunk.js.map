{"version":3,"sources":["components/JoinRoom/JoinRoom.js","components/Messages/Message/Message.js","components/Messages/Messages.js","components/RoomInfo/RoomInfo.js","components/Chat/Chat.js","components/Input/Input.js","App.js","index.js"],"names":["JoinRoom","useState","name","setName","room","setRoom","className","src","component","Paper","Typography","variant","noValidate","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","e","target","value","type","onClick","preventDefault","to","Button","color","Message","message","text","user","isSentByCurrentUser","trimmedName","trim","toLowerCase","Messages","messages","map","i","key","RoomInfo","socket","href","Input","setMessage","sendMessage","placeholder","onKeyPress","Chat","location","setMessages","users","setUsers","useEffect","queryString","parse","search","io","console","log","emit","error","alert","on","AppBar","Toolbar","noWrap","elevation","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"uVA4FeA,EAxEE,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACdC,EADc,KACRC,EADQ,OAEGF,mBAAS,IAFZ,mBAEdG,EAFc,KAERC,EAFQ,KAIrB,OACE,yBAAKC,UAAU,sBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,sBACb,yBACEA,UAAU,YACVC,IAAI,gDAGR,yBAAKD,UAAU,oBAAoBE,UAAWC,KAC5C,yBAAKH,UAAU,eACb,yBAAKA,UAAU,aACb,kBAACI,EAAA,EAAD,CAAYF,UAAU,KAAKG,QAAQ,MAAnC,aAIF,0BAAML,UAAU,WAAWM,YAAU,GACnC,kBAACC,EAAA,EAAD,CACEF,QAAQ,WACRG,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNhB,KAAK,OACLiB,aAAa,OACbC,WAAS,EACTC,SAAU,SAACC,GAAD,OAAOnB,EAAQmB,EAAEC,OAAOC,UAEpC,kBAACX,EAAA,EAAD,CACEF,QAAQ,WACRG,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTd,KAAK,OACLgB,MAAM,OACNO,KAAK,OAELR,GAAG,OACHE,aAAa,mBACbE,SAAU,SAACC,GAAD,OAAOjB,EAAQiB,EAAEC,OAAOC,UAEpC,yBAAKlB,UAAU,mBACb,kBAAC,IAAD,CACEA,UAAU,iBACVoB,QAAS,SAACJ,GAAD,OAASpB,GAASE,EAA4B,KAArBkB,EAAEK,kBACpCC,GAAE,8BAAyB1B,EAAzB,iBAAsCE,IAGxC,kBAACyB,EAAA,EAAD,CACEJ,KAAK,SACLT,WAAS,EACTL,QAAQ,YACRmB,MAAM,UACNxB,UAAU,oBALZ,mB,0CC/CHyB,G,cAvBC,SAAC,GAAuC,IAAD,IAApCC,QAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAC9BC,GAAsB,EACpBC,EAF+C,EAAXlC,KAEjBmC,OAAOC,cAIhC,OAHIJ,IAASE,IACXD,GAAsB,GAEjBA,EACL,yBAAK7B,UAAU,wBACb,yBAAKA,UAAU,8BACb,uBAAGA,UAAU,qBAAqB2B,IAEpC,uBAAG3B,UAAU,qBAAqB8B,IAGpC,yBAAK9B,UAAU,0BACb,uBAAGA,UAAU,qBAAqB4B,GAClC,yBAAK5B,UAAU,8BACb,uBAAGA,UAAU,qBAAqB2B,OCF3BM,G,OAVE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUtC,EAAb,EAAaA,KAAb,OACf,yBAAKI,UAAU,YACZkC,EAASC,KAAI,SAACT,EAASU,GAAV,OACZ,yBAAKC,IAAKD,GACR,kBAAC,EAAD,CAASV,QAASA,EAAS9B,KAAMA,W,OCe1B0C,ICVXC,EDUWD,EArBf,YAA6B,IAATxC,EAAQ,EAARA,KAClB,OACE,yBAAKE,UAAU,YACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,iBAAd,iBAAyCF,KAE3C,yBAAKE,UAAU,aACb,kBAACuB,EAAA,EAAD,CACEvB,UAAU,aAEVK,QAAQ,SACRmC,KAAK,YACLhB,MAAM,WALR,YEeOiB,G,OAvBD,SAAC,GAAD,IAAGf,EAAH,EAAGA,QAASgB,EAAZ,EAAYA,WAAYC,EAAxB,EAAwBA,YAAxB,OAGZ,yBAAK3C,UAAU,kBACb,2BACEA,UAAU,QACVmB,KAAK,OACLyB,YAAY,0DACZ1B,MAAOQ,EACPX,SAAU,SAACC,GAAD,OAAO0B,EAAW1B,EAAEC,OAAOC,QACrC2B,WAAY,SAAC7B,GAAD,MAAkB,UAAVA,EAAEqB,IAAkBM,EAAY3B,GAAK,QAE3D,kBAACO,EAAA,EAAD,CACElB,QAAQ,YACRmB,MAAM,UACNxB,UAAU,cACVoB,QAAS,SAACJ,GAAD,OAAO2B,EAAY3B,KAJ9B,W,kBDoGW8B,EAlGF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACLpD,mBAAS,IADJ,mBACtBC,EADsB,KAChBC,EADgB,OAELF,mBAAS,IAFJ,mBAEtBG,EAFsB,KAEhBC,EAFgB,OAGCJ,mBAAS,IAHV,mBAGtB+B,EAHsB,KAGbgB,EAHa,OAIG/C,mBAAS,IAJZ,mBAItBuC,EAJsB,KAIZc,EAJY,OAMHrD,mBAAS,IANN,mBAMtBsD,EANsB,KAMfC,EANe,KAU7BC,qBAAU,WAAM,MAMSC,IAAYC,MAAMN,EAASO,QAA1C1D,EANM,EAMNA,KAAME,EANA,EAMAA,KAEdyC,EAASgB,IAVM,kBAYf1D,EAAQD,GACRG,EAAQD,GAER0D,QAAQC,IAAI7D,EAAME,GAGlByC,EAAOmB,KAAK,OAAQ,CAAE9D,OAAME,SAAQ,SAAC6D,GAG/BA,GACFC,MAAMD,QAST,CA/Bc,iBA+BHZ,EAASO,SAEvBH,qBAAU,WAERZ,EAAOsB,GAAG,WAAW,SAACnC,GACpBsB,EAAY,GAAD,mBAAKd,GAAL,CAAeR,QAG5Ba,EAAOsB,GAAG,YAAY,YAAgB,IAAbZ,EAAY,EAAZA,MACvBC,EAASD,QAEV,CAACf,IAiBJ,OAPAsB,QAAQC,IAAI/B,EAASQ,GACrBsB,QAAQC,IAAIR,EAAO,SAOjB,yBAAKjD,UAAU,sBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,UACb,kBAAC8D,EAAA,EAAD,CAAQtC,MAAM,WACZ,kBAACuC,EAAA,EAAD,CAAS/D,UAAU,WACjB,kBAACI,EAAA,EAAD,CAAYC,QAAQ,KAAKmB,MAAM,UAAUwC,QAAM,GAA/C,YAGA,kBAACzC,EAAA,EAAD,CAAQC,MAAM,UAAUgB,KAAK,aAA7B,YAMN,yBAAKxC,UAAU,cACb,kBAACG,EAAA,EAAD,CAAO8D,UAAW,EAAGjE,UAAU,mBAC7B,kBAAC,EAAD,CAAUF,KAAMA,IAChB,kBAAC,EAAD,CAAUoC,SAAUA,EAAUtC,KAAMA,IACpC,kBAAC,EAAD,CACE8B,QAASA,EACTgB,WAAYA,EACZC,YApCQ,SAAC3B,GACnBA,EAAEK,iBACEK,GACFa,EAAOmB,KAAK,cAAehC,EAASgB,EAAW,aE7DtCwB,EAPH,kBACV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aAAaC,OAAK,EAAClE,UAAWR,IAC1C,kBAAC,IAAD,CAAOyE,KAAK,iBAAiBjE,UAAW4C,MCN5CuB,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.d9a03f1e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./JoinRoom.css\";\n\n// Material-UI 적용하기\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\n// import Image from \"@material-ui/core/Image\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n// import Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\n// import LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst JoinRoom = () => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  return (\n    <div className=\"joinOuterContainer\">\n      <div className=\"joinInnerContainer\">\n        <div className=\"joinImageContainer\">\n          <img\n            className=\"joinImage\"\n            src=\"https://source.unsplash.com/1600x900/?lama\"\n          />\n        </div>\n        <div className=\"joinFormContainer\" component={Paper}>\n          <div className=\"joinFormBox\">\n            <div className=\"joinTitle\">\n              <Typography component=\"h1\" variant=\"h5\">\n                LamaChat\n              </Typography>\n            </div>\n            <form className=\"joinForm\" noValidate>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                autoComplete=\"name\"\n                autoFocus\n                onChange={(e) => setName(e.target.value)}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"room\"\n                label=\"room\"\n                type=\"room\"\n                // size=\"large\"\n                id=\"room\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setRoom(e.target.value)}\n              />\n              <div className=\"buttonBox mt-10\">\n                <Link\n                  className=\"joinButtonLink\"\n                  onClick={(e) => (!name || !room ? e.preventDefault() : null)}\n                  to={`/lamaChat/chat?name=${name}&room=${room}`}\n                  // href={`/chat?name=${name}&room=${room}`}\n                >\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className=\"joinButton mt-20\"\n                  >\n                    Sign In\n                  </Button>\n                </Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JoinRoom;\n","import React from \"react\";\nimport \"./Message.css\";\n\nconst Message = ({ message: { text, user }, name }) => {\n  let isSentByCurrentUser = false;\n  const trimmedName = name.trim().toLowerCase();\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n  return isSentByCurrentUser ? (\n    <div className=\"messageContainer end\">\n      <div className=\"messageBox backgroundLight\">\n        <p className=\"messageText black\">{text}</p>\n      </div>\n      <p className=\"sentMessage pl-10\">{trimmedName}</p>\n    </div>\n  ) : (\n    <div className=\"messageContainer start\">\n      <p className=\"sentMessage pr-10\">{user}</p>\n      <div className=\"messageBox backgroundLight\">\n        <p className=\"messageText black\">{text}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\n\nimport Message from \"./Message/Message\";\n\nimport { TabScrollButton } from \"@material-ui/core\";\n\nimport \"./Messages.css\";\n\nconst Messages = ({ messages, name }) => (\n  <div className=\"messages\">\n    {messages.map((message, i) => (\n      <div key={i}>\n        <Message message={message} name={name} />\n      </div>\n    ))}\n  </div>\n);\n\nexport default Messages;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./RoomInfo.css\";\n\nimport Button from \"@material-ui/core/Button\";\n\nfunction RoomInfo({ room }) {\n  return (\n    <div className=\"roomInfo\">\n      <div className=\"leftInfo\">\n        <h3 className=\"leftInfo-text\">{`Room : ${room}`}</h3>\n      </div>\n      <div className=\"rightInfo\">\n        <Button\n          className=\"infoButton\"\n          // variant=\"contained\"\n          variant=\"raised\"\n          href=\"/lamaChat\"\n          color=\"inherit\"\n        >\n          close\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default RoomInfo;\n","import React, { useEffect, useState, useReducer } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport \"./Chat.css\";\n\n// 하위 컴포넌트\nimport Messages from \"../Messages/Messages\";\nimport RoomInfo from \"../RoomInfo/RoomInfo\";\nimport Input from \"../Input/Input\";\n\n// Material-ui\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const [users, setUsers] = useState(\"\");\n\n  const ENDPOINT = \"localhost:5000\";\n\n  useEffect(() => {\n    // query-string middleware의 사용\n    // const data = queryString.parse(location.search);\n    // console.log(location.search); // ?name=lama&room=peru\n    // console.log(data); // 객체 : {name: \"lama\", room: \"peru\"}\n    // 다시 정리\n    const { name, room } = queryString.parse(location.search);\n\n    socket = io(ENDPOINT); // 소켓 연결\n\n    setName(name);\n    setRoom(room);\n\n    console.log(name, room); // lama peru\n\n    // console.log(socket);\n    socket.emit(\"join\", { name, room }, (error) => {\n      // console.log(\"error\");\n      // 에러 처리\n      if (error) {\n        alert(error);\n      }\n    });\n\n    // return () => {\n    //   socket.emit(\"disconnect\");\n\n    //   socket.off();\n    // };\n  }, [ENDPOINT, location.search]); // 한번만 부른다 // 불필요한 사이드 이펙트를 줄인다\n\n  useEffect(() => {\n    // 서버에서 message 이벤트가 올 경우에 대해서 `on`\n    socket.on(\"message\", (message) => {\n      setMessages([...messages, message]);\n    });\n\n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n  }, [messages]);\n\n  // 메세지 보내기 함수\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (message) {\n      socket.emit(\"sendMessage\", message, setMessage(\"\"));\n    }\n  };\n\n  console.log(message, messages);\n  console.log(users, \"users\");\n\n  // return <h1>Chat</h1>;\n  // 1.roominfo\n  // 2.messages\n  // 3.input\n  return (\n    <div className=\"chatOuterContainer\">\n      <div className=\"chatInnerContainer\">\n        <div className=\"appbar\">\n          <AppBar color=\"primary\">\n            <Toolbar className=\"toolBar\">\n              <Typography variant=\"h4\" color=\"inherit\" noWrap>\n                LamaChat\n              </Typography>\n              <Button color=\"inherit\" href=\"/lamaChat\">\n                close\n              </Button>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <div className=\"chatScreen\">\n          <Paper elevation={5} className=\"chatScreenPaper\">\n            <RoomInfo room={room} />\n            <Messages messages={messages} name={name} />\n            <Input\n              message={message}\n              setMessage={setMessage}\n              sendMessage={sendMessage}\n            />\n          </Paper>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport \"./Input.css\";\n\nimport Button from \"@material-ui/core/Button\";\n\nconst Input = ({ message, setMessage, sendMessage }) => (\n  //   return <div className=\"Input\"></div>;\n  // <form className=\"inputForm\">\n  <div className=\"inputContainer\">\n    <input\n      className=\"input\"\n      type=\"text\"\n      placeholder=\"메세지를 입력하세요\"\n      value={message}\n      onChange={(e) => setMessage(e.target.value)}\n      onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\n    />\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      className=\"inputButton\"\n      onClick={(e) => sendMessage(e)}\n    >\n      send\n    </Button>\n  </div>\n  // </form>\n);\nexport default Input;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport JoinRoom from \"./components/JoinRoom/JoinRoom\";\nimport Chat from \"./components/Chat/Chat\";\n\n// 1. Router 경로 설정\nconst App = () => (\n  <Router>\n    <Route path=\"/lamaChat/\" exact component={JoinRoom} />\n    <Route path=\"/lamaChat/chat\" component={Chat} />\n  </Router>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}