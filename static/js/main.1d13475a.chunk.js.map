{"version":3,"sources":["components/JoinRoom/JoinRoom.js","components/Messages/Message/Message.js","components/Messages/Messages.js","components/RoomInfo/RoomInfo.js","components/Chat/Chat.js","components/Input/Input.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","JoinRoom","useState","name","setName","room","setRoom","classes","Grid","container","component","className","item","xs","sm","md","lg","xl","Paper","elevation","square","Typography","variant","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","e","target","value","onClick","preventDefault","to","Button","color","Message","message","text","user","isSentByCurrentUser","trimmedName","trim","toLowerCase","Messages","messages","map","i","key","RoomInfo","socket","href","Input","setMessage","sendMessage","placeholder","onKeyPress","padding","appBar","marginBottom","breakpoints","up","button","Chat","location","setMessages","users","setUsers","useEffect","queryString","parse","search","io","console","log","emit","error","alert","on","justify","alignContent","AppBar","Toolbar","noWrap","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d13475a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Material-UI 적용하기\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n// import Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\n// import LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    // backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundImage: \"url(https://source.unsplash.com/1600x900/?lama)\",\n    // backgroundImage:\n    //   \"url(https://images.unsplash.com/photo-1518259102261-b40117eabbc9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    // width: \"100%\",\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst JoinRoom = () => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      {/* <div className=\"joinOuterContainer\"> */}\n      {/* <CssBaseline /> */}\n      <Grid container spacing={5}>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={7}\n          lg={7}\n          xl={7}\n          className={classes.image}\n        />\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={5}\n          lg={5}\n          xl={5}\n          component={Paper}\n          elevation={6} // 그림자?\n          square\n        >\n          <div className={classes.paper}>\n            {/* <div className=\"joinInnerContainer\"> */}\n            {/* <h1 className=\"head\">JoinRoom</h1> */}\n            <Typography component=\"h1\" variant=\"h5\">\n              LamaChat\n            </Typography>\n            {/* <div>\n          <input\n            placeholder=\"Name\"\n            className=\"joinInput\"\n            type=\"text\"\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div> */}\n            {/* <form className={classes.form} noValidate> */}\n            <form className={classes.form} noValidate>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                autoComplete=\"name\"\n                autoFocus\n                onChange={(e) => setName(e.target.value)}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"room\"\n                label=\"room\"\n                type=\"room\"\n                id=\"room\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setRoom(e.target.value)}\n              />\n\n              {/* <div>\n          <input\n            placeholder=\"Room\"\n            className=\"joinInput mt-20\" // margin top 20\n            type=\"text\"\n            onChange={(e) => setRoom(e.target.value)}\n          />\n        </div> */}\n\n              <Link\n                onClick={(e) => (!name || !room ? e.preventDefault() : null)}\n                to={`/lamaChat/chat?name=${name}&room=${room}`}\n                // href={`/chat?name=${name}&room=${room}`}\n              >\n                {/* <button className=\"button mt-20\" type=\"submit\">\n            Sign In\n          </button> */}\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  // className=\"button\"\n                >\n                  Sign In\n                </Button>\n              </Link>\n            </form>\n            {/* </div> */}\n          </div>\n        </Grid>\n      </Grid>\n      {/* </div> */}\n    </Grid>\n  );\n};\n\nexport default JoinRoom;\n","import React from \"react\";\n\nconst Message = ({ message: { text, user }, name }) => {\n  let isSentByCurrentUser = false;\n  const trimmedName = name.trim().toLowerCase();\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n  return isSentByCurrentUser ? (\n    <div>\n      <p>{trimmedName}</p>\n      <p>{text}</p>\n    </div>\n  ) : (\n    <div>\n      <p>{text}</p>\n      <p>{user}</p>\n    </div>\n  );\n  // return (\n  //   <div>\n  //     <p>{name}</p>\n  //     <p>{text}</p>\n  //   </div>\n  // );\n};\n\nexport default Message;\n","import React from \"react\";\n\nimport Message from \"./Message/Message\";\n\nconst Messages = ({ messages, name }) => (\n  <div className=\"messages\">\n    {messages.map((message, i) => (\n      <div key={i}>\n        <Message message={message} name={name} />\n      </div>\n    ))}\n  </div>\n);\n\nexport default Messages;\n","import React from \"react\";\n\nfunction RoomInfo({ room }) {\n  return (\n    <div className=\"roomInfo\">\n      <div className=\"leftInfo\">{room}</div>\n      <div className=\"rightInfo\">\n        <a href=\"/lamaChat/\">close</a>\n      </div>\n    </div>\n  );\n}\n\nexport default RoomInfo;\n","import React, { useEffect, useState, useReducer } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\n// 하위 컴포넌트\nimport Messages from \"../Messages/Messages\";\nimport RoomInfo from \"../RoomInfo/RoomInfo\";\nimport Input from \"../Input/Input\";\n\n// Material-ui\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: 0,\n    height: \"100vh\",\n    backgroundImage: \"url(https://source.unsplash.com/1600x900/?peru,lama)\",\n  },\n  appBar: {\n    // position: \"static\",\n    padding: theme.spacing(2),\n  },\n  paper: {\n    height: \"50vh\",\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  button: {\n    // position: \"flex-end\",\n  },\n}));\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const [users, setUsers] = useState(\"\");\n\n  const ENDPOINT = \"localhost:5000\";\n\n  // material ui style\n  const classes = useStyles();\n\n  useEffect(() => {\n    // query-string middleware의 사용\n    // const data = queryString.parse(location.search);\n    // console.log(location.search); // ?name=lama&room=peru\n    // console.log(data); // 객체 : {name: \"lama\", room: \"peru\"}\n    // 다시 정리\n    const { name, room } = queryString.parse(location.search);\n\n    socket = io(ENDPOINT); // 소켓 연결\n\n    setName(name);\n    setRoom(room);\n\n    console.log(name, room); // lama peru\n\n    // console.log(socket);\n    socket.emit(\"join\", { name, room }, (error) => {\n      // console.log(\"error\");\n      // 에러 처리\n      if (error) {\n        alert(error);\n      }\n    });\n\n    // return () => {\n    //   socket.emit(\"disconnect\");\n\n    //   socket.off();\n    // };\n  }, [ENDPOINT, location.search]); // 한번만 부른다 // 불필요한 사이드 이펙트를 줄인다\n\n  useEffect(() => {\n    // 서버에서 message 이벤트가 올 경우에 대해서 `on`\n    socket.on(\"message\", (message) => {\n      setMessages([...messages, message]);\n    });\n\n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n  }, [messages]);\n\n  // 메세지 보내기 함수\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (message) {\n      socket.emit(\"sendMessage\", message, setMessage(\"\"));\n    }\n  };\n\n  console.log(message, messages);\n  console.log(users, \"users\");\n\n  // return <h1>Chat</h1>;\n  // 1.roominfo\n  // 2.messages\n  // 3.input\n  return (\n    <Grid\n      container\n      // alignItems=\"flex-start\"\n      justify=\"center\"\n      alignContent=\"center\"\n      className={classes.root}\n    >\n      <Grid\n        // alignItems=\"flex-start\"\n        item\n        component={AppBar}\n        className={classes.appBar}\n        color=\"default\"\n      >\n        {/* <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}> */}\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            LamaChat\n          </Typography>\n          <Button color=\"inherit\" href=\"/\" className={classes.button}>\n            close\n          </Button>\n        </Toolbar>\n        {/* </AppBar> */}\n      </Grid>\n\n      <Grid\n        item\n        xs={10}\n        sm={10}\n        md={8}\n        lg={8}\n        xl={8}\n        component={Paper}\n        className={classes.paper}\n      >\n        <div className=\"container\">\n          {/* <div className=\"roominfo\">\n          <div>{room}</div>\n          <a href=\"/\">close</a>\n        </div> */}\n          <RoomInfo room={room} />\n          <Messages messages={messages} name={name} />\n          <Input\n            message={message}\n            setMessage={setMessage}\n            sendMessage={sendMessage}\n          />\n          {/* <input\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\n        />\n        <button onClick={(e) => sendMessage(e)}>send</button> */}\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\n\nconst Input = ({ message, setMessage, sendMessage }) => (\n  //   return <div className=\"Input\"></div>;\n  <form className=\"inputForm\">\n    <input\n      className=\"input\"\n      type=\"text\"\n      placeholder=\"메세지를 입력하세요\"\n      value={message}\n      onChange={(e) => setMessage(e.target.value)}\n      onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\n    />\n    <button onClick={(e) => sendMessage(e)}>send</button>\n  </form>\n);\nexport default Input;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport JoinRoom from \"./components/JoinRoom/JoinRoom\";\nimport Chat from \"./components/Chat/Chat\";\n\n// 1. Router 경로 설정\nconst App = () => (\n  <Router>\n    <Route path=\"/lamaChat/\" exact component={JoinRoom} />\n    <Route path=\"/lamaChat/chat\" component={Chat} />\n  </Router>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}